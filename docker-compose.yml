version: '3.7'

services:

  # this init container only recovers users data for flaski3
 init:
  container_name: init
  image: mpgagebioinformatics/flaski:latest
  build:
    context: ./
    dockerfile: Dockerfile
    args:
      APP_VERSION: dev
      PYFLASKI_VERSION: dev
  entrypoint: /myapp/services/init/entrypoint.sh
  user: root
  volumes:
   - data3:/myapp_data/users
   - ~/myapp:/myapp
   - ~/flaski23/backup/stats:/backup/stats
   - ~/flaski23/backup/users_data3:/backup/users_data
  #  - ~/flaski23/backup/users_data2:/backup/users_data
   - ~/flaski23/backup/mariadb:/backup/mariadb:ro
   - ./_models.py:/myapp/myapp/_models.py
  environment:
   APP_NAME: myapp
   FLASK_ENV: init
   ADMINS: flaski@age.mpg.de
   RESTORE_DB: 1
   RESTORE_USERS_DATA: 1
   UPGRADE_DB: 1
   MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
   SECRET_KEY: ${SECRET_KEY}
   REDIS_ADDRESS: redis:6379/0
   REDIS_PASSWORD: ${REDIS_PASSWORD}
   MYSQL_USER: flaski
   MYSQL_PASSWORD: ${MYSQL_PASSWORD} 
   MYSQL_HOST: mariadb
   MYSQL_PORT: 3306
   DB_NAME: flaski
  #  MAIL_PORT: 587
  #  MAIL_USE_TLS: 1
  #  MAIL_PASSWORD: ${MAIL_PASSWORD}
  #  MAIL_SERVER: mail.age.mpg.de
   MAIL_USERNAME: flaski@age.mpg.de
   MAIL_USERNAME_ADDRESS: flaski@age.mpg.de
  links:
   - mariadb
  depends_on:
   - mariadb

#  server:
#   container_name: server
#   image: flaski/flaski:latest
#   build:
#     context: ~/flaski
#     dockerfile: services/server/dockerfiles/Dockerfile
#   restart: always
#   volumes:
#    - ~/flaski/utils/dev.py:/flaski/flaski/apps/external.py # this needs to be the first volume as otherwise it will be overwritten by `- ./:/flaski`
#    - data:/flaski_data/users
#    - ~/flaski:/flaski
#    - ~/flaski23/private:/flaski_private:ro
#    - ~/flaski23/mpcdf:/mpcdf
#    - ~/flaski23/submissions:/submissions
#   environment:
#    N_WORKERS: 4
#    ADMINS: flaski@age.mpg.de
#    APP_NAME: flaski
#    INSTANCE: backup
#    SECRET_KEY: ${SECRET_KEY}
#    PRIVATE_APPS: /flaski_private/private.apps.tsv
#    APP_URL: https://flaski.localhost
#    FLASK_ENV: development #development #production
#    LOGS: /var/log/flaski/
#   #  MAIL_PASSWORD: ${MAIL_PASSWORD}
#   #  MAIL_PORT: 587
#   #  MAIL_SERVER: mail.age.mpg.de
#   #  MAIL_USE_TLS: '1'
#    MAIL_USERNAME: flaski@age.mpg.de
#    ADMINS: flaski@age.mpg.de
#    MYSQL_HOST: mariadb
#    MYSQL_PORT: 3306
#    MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#    MYSQL_USER: flaski
#    DB_NAME: flaski
#    REDIS_ADDRESS: redis:6379/0
#    REDIS_PASSWORD: ${REDIS_PASSWORD}
#   labels:
#    - traefik.http.services.server.loadbalancer.server.port=8000
#    - traefik.http.middlewares.server_https.redirectscheme.scheme=https
#    - traefik.http.routers.server.entrypoints=web
#    - traefik.http.routers.server.rule=Host(`flaski.localhost`)
#    - traefik.http.routers.server.middlewares=server_https@docker
#    - traefik.http.routers.server_https.rule=Host(`flaski.localhost`)
#    - traefik.http.routers.server_https.tls=true
#    - traefik.http.routers.server_https.entrypoints=websecure
#   links:
#    - mariadb
#    - redis
#   depends_on:
#    - init
#    - mariadb
#    - redis

 server3:
  container_name: server3
  image: mpgagebioinformatics/flaski:latest
  build:
    context: ./
    dockerfile: Dockerfile
    args:
      APP_VERSION: dev
      PYFLASKI_VERSION: dev
  restart: always
  volumes:
   - ~/flaski23/submissions/:/submissions
   - data3:/flaski_data/users
  #  - ~/tmp_sessions:/flaski_data/users/1
   - ~/flaski23/private/:/flaski_private:rw
   - ./static/dog-solid.png:/myapp/myapp/static/favicon.ico
   - ./static/dog-solid.png:/myapp/myapp/static/logo.png
   - ./pyflaski/pyflaski:/myapp/pyflaski
   - ./routes/apps:/myapp/myapp/routes/apps
  #  - ~/myapp/myapp/routes/login.py:/myapp/myapp/routes/login.py
  #  - ~/myapp/myapp/routes/register.py:/myapp/myapp/routes/register.py
   - ~/myapp/myapp/models.py:/myapp/myapp/models.py
   - ~/myapp/myapp/routes/_utils.py:/myapp/myapp/routes/_utils.py
   - ~/myapp/myapp/routes/admin.py:/myapp/myapp/routes/admin.py
   - ./routes/_routes.py:/myapp/myapp/routes/_routes.py
   - ./routes/home.py:/myapp/myapp/routes/home.py
   - ./routes/index.py:/myapp/myapp/routes/index.py
   - ./routes/_impressum.py:/myapp/myapp/routes/_impressum.py
   - ./routes/_vars.py:/myapp/myapp/routes/_vars.py
   - ./routes/_privacy.py:/myapp/myapp/routes/_privacy.py
   - ./routes/_about.py:/myapp/myapp/routes/_about.py
   - ~/myapp/myapp/routes/about.py:/myapp/myapp/routes/about.py
   - ./email/app_exception.html:/myapp/myapp/templates/email/app_exception.html
   - ./email/app_exception.txt:/myapp/myapp/templates/email/app_exception.txt
   - ./email/app_help.html:/myapp/myapp/templates/email/app_help.html
   - ./email/app_help.txt:/myapp/myapp/templates/email/app_help.txt
   - ./email/submissions.age.html:/myapp/myapp/templates/email/submissions.age.html
   - ./email/submissions.age.txt:/myapp/myapp/templates/email/submissions.age.txt
   - ./email/submissions.mpcdf.html:/myapp/myapp/templates/email/submissions.mpcdf.html
   - ./email/submissions.mpcdf.txt:/myapp/myapp/templates/email/submissions.mpcdf.txt
   - ./_models.py:/myapp/myapp/_models.py
   - ./email/submissions.mpcdf.data.html:/myapp/myapp/templates/email/submissions.mpcdf.data.html
   - ./email/submissions.mpcdf.data.txt:/myapp/myapp/templates/email/submissions.mpcdf.data.txt
   - ./email/validate_email.html:/myapp/myapp/templates/email/validate_email.html
   - ./email/validate_email.txt:/myapp/myapp/templates/email/validate_email.txt
  environment:
   N_WORKERS: 4
   APP_NAME: myapp
   APP_TITLE: flaski(local)
   INSTANCE: local
   SECRET_KEY: ${SECRET_KEY}
   APP_URL: https://flaski.localhost/v3
   PAGE_PREFIX: /v3
   FLASK_ENV: development #development #production
   FLASK_DEBUG: 1
  #  MAIL_PASSWORD: ${MAIL_PASSWORD}
  #  MAIL_PORT: 587
  #  MAIL_SERVER: mail.age.mpg.de
   MAIL_USERNAME: flaski@age.mpg.de
   MAIL_USERNAME_ADDRESS: flaski@age.mpg.de
   ADMINS: flaski@age.mpg.de
  #  MAIL_USE_TLS: '1'
   MYSQL_HOST: mariadb
   MYSQL_PORT: 3306
   MYSQL_PASSWORD: ${MYSQL_PASSWORD}
   MYSQL_USER: flaski
   DB_NAME: flaski
   REDIS_ADDRESS: redis:6379/0
   REDIS_PASSWORD: ${REDIS_PASSWORD}
   PUREFTPD_AUTH_SALT: ${PUREFTPD_AUTH_SALT}
   PUREFTPD_MYSQL_SERVER: ${PUREFTPD_MYSQL_SERVER}
   PUREFTPD_MYSQL_PORT: 3306
   PUREFTPD_MYSQL_USER: pureftpd
   PUREFTPD_MYSQL_PASS: ${PUREFTPD_MYSQL_PASS}
   PUREFTPD_MYSQL_DB: pureftpd
  labels:
   - traefik.http.services.server3.loadbalancer.server.port=8000
   - traefik.http.middlewares.server3_https.redirectscheme.scheme=https
   - traefik.http.routers.server3.entrypoints=web
   - traefik.http.routers.server3.rule=Host(`flaski.localhost`) && PathPrefix(`/v3`)
   - traefik.http.routers.server3.middlewares=server3_https@docker
   - traefik.http.routers.server3_https.rule=Host(`flaski.localhost`) && PathPrefix(`/v3`)
   - traefik.http.routers.server3_https.tls=true
   - traefik.http.routers.server3_https.entrypoints=websecure
  links:
   - mariadb
   - redis
  depends_on:
   - init
   - mariadb
   - redis

#  this backup is currently only backing up the data from v2 
 backup:
  container_name: backup
  image: mpgagebioinformatics/myapp:latest
  build:
    context: ~/myapp
    dockerfile: services/server/Dockerfile
    args:
      BUILD_NAME: myapp
      MYAPP_VERSION: dev
      UPGRADE_REQS: "yes"
  entrypoint: /flaski/services/backup/entrypoint.sh
  user: root
  depends_on:
   - mariadb
   - init
  volumes:
   - ~/myapp:/flaski
   - ~/flaski23/backup/stats:/backup/stats
   - ~/flaski23/backup/users_data:/backup/users_data
   - ~/flaski23/backup/mariadb:/backup/mariadb:ro
   - data3:/myapp_data/users:ro
  environment:
   APP_NAME: flaski
   INSTANCE: backup
   FLASK_ENV: backup
   LOGS: /var/log/flaski/
   MYSQL_HOST: mariadb
   MYSQL_PORT: 3306
   MYSQL_PASSWORD: ${MYSQL_PASSWORD}
   MYSQL_USER: flaski
   DB_NAME: flaski
  restart: unless-stopped
  links:
   - mariadb

 # this backup is currently only backing up the data from v2 
#  backup:
#   container_name: backup
#   image: mpgagebioinformatics/myapp-flaski2:latest
#   build:
#     context: ~/myapp
#     dockerfile: services/server/Dockerfile
#     args:
#       BUILD_NAME: flaski
#       MYAPP_VERSION: dev
#       UPGRADE_REQS: "no"
#   entrypoint: /flaski/services/backup/entrypoint.sh
#   user: root
#   depends_on:
#    - mariadb
#    - init
#   volumes:
#    - ~/myapp:/flaski
#    - ~/flaski23/backup/stats:/backup/stats
#    - ~/flaski23/backup/users_data:/backup/users_data
#    - ~/flaski23/backup/mariadb:/backup/mariadb:ro
#    - data:/flaski_data/users:ro
#   environment:
#    APP_NAME: flaski
#    INSTANCE: backup
#    FLASK_ENV: backup
#    LOGS: /var/log/flaski/
#    MYSQL_HOST: mariadb
#    MYSQL_PORT: 3306
#    MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#    MYSQL_USER: flaski
#    DB_NAME: flaski
#   restart: unless-stopped
#   links:
#    - mariadb

#  uploads:
#   container_name: uploads
#   # image: mpgagebioinformatics/myapp:latest # -flaski2:latest
#   build:
#     context: ~/myapp
#     dockerfile: services/server/Dockerfile
#     args:
#       BUILD_NAME: myapp
#       MYAPP_VERSION: dev
#       UPGRADE_REQS: "no"  
#   entrypoint: /myapp/services/rsync/entrypoint.sh
#   volumes:
#    - ~/myapp:/myapp
#    - ~/flaski23/backup/mpcdf/:/mpcdf
#    - ~/flaski23/backup/submissions/:/submissions
#    - ./.owncloud.flaski:/flaski/.owncloud.flaski
#   #  - /srv/submissions/:/submissions
#   #  - /srv/backup/mariadb:/backup/mariadb
#   #  - /srv/backup/data/users:/backup/users_data
#   environment:
#    FLASK_ENV: rsync
#    OWNCLOUD_ADDRESS: https://datashare.mpcdf.mpg.de
#    OWNCLOUD_USER: g-flaski
#    OWNCLOUD_PASS: ${OWNCLOUD_PASS}   
#   restart: unless-stopped

 mariadb:
  container_name: mariadb
  image: mariadb:10.5
  restart: always
  volumes:
   - db:/var/lib/mysql
  environment:
    MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

 redis:
  container_name: redis
  image: redis:7
  restart: always
  command: redis-server --requirepass ${REDIS_PASSWORD}

 reverse-proxy:
  image: traefik:v2.6
  command: 
    - --api.insecure=true
    - --providers.docker=true
    - --entrypoints.websecure.address=:443
    - --entrypoints.web.address=:80
    # - --providers.file.filename=/etc/traefik/dynamic_conf/conf.yml
    # - --providers.file.watch=true
  ports:
    - "80:80"
    - "443:443"
    - "8080:8080"
  volumes:
    # - ~/flaski23/certificates/:/tools/certs
    # - ./services/traefik/config.yml:/etc/traefik/dynamic_conf/conf.yml:ro
    - /var/run/docker.sock:/var/run/docker.sock
  labels:
    - traefik.enable=false
  depends_on:
  #  - server
   - server3

#  nginx:
#   container_name: nginx
#   image: nginx:alpine
#   restart: always
#   ports:
#    - 80:80
#    - 443:443
#   volumes:
#    # prod
#    #  - ./services/nginx/flaski23.conf:/etc/nginx/conf.d/default.conf:rw
#    #  - ~/flaski23/certificates/cert.pem:/certs/cert.pem:ro 
#    #  - ~/flaski23/certificates/key.pem:/certs/key.pem:ro
#    #  - ~/flaski23/certificates/dhparam.pem:/certs/dhparam.pem:ro
#    # dev
#    - ./services/nginx/dev.conf:/etc/nginx/conf.d/default.conf:rw
#    - ~/flaski23/certificates/selfsigned/cert.pem:/certs/cert.pem:ro          
#    - ~/flaski23/certificates/selfsigned/key.pem:/certs/key.pem:ro
#    - ~/flaski23/certificates/dhparam.pem:/certs/dhparam.pem:ro
#   links:
#    - server
#    - server3
#   depends_on:
#    - server
#    - server3

volumes:
#  data:
#   external: false
 data3:
  external: false
 db:
  external: false
 oc:
  external: false
